@page
@model VariantsDemo.Pages.IndexModel
@{
}

<h1>
    Experimentation Example
</h1>

<div class="progress-bars-container">
    
</div>

<script type="text/javascript">
    let mainContainer = document.querySelector(".progress-bars-container");
    const userCount = 6;

    const variantColors = {
        "Control": "#C9E4DE",
        "Cheap": "#C6DEF1",
        "Expensive": "#FAEDCB",
    }
    
    for (let i = 0; i < userCount; i++) {
        fetch('./GetUserInfo', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
        })
            .then(response => response.json())
            .then(data => {
                console.log(data);

                // Create Progress Bar
                let container = document.createElement("div");
                container.className = "progress-bar-container";
                let labels = document.createElement("div");
                labels.className = "progress-bar-labels";
                let nameHolder = document.createElement("div");

                let nameLabel = document.createElement("span");
                nameLabel.className = "progress-bar-label";
                nameLabel.innerHTML = "Name";

                let name = document.createElement("span");
                name.className = "progress-bar-name";
                name.innerHTML = data.Username;

                let variantHolder = document.createElement("div");

                let variantLabel = document.createElement("span");
                variantLabel.className = "progress-bar-label";
                variantLabel.innerHTML = "Variant";

                let variant = document.createElement("span");
                variant.className = "progress-bar-variant";
                variant.innerHTML = data.Username;

                let bar = document.createElement("div");
                bar.className = "progress-bar";
                let progress = document.createElement("div");
                progress.className = "progress";
                progress.style.backgroundColor = variantColors[data.VariantName];

                nameHolder.appendChild(nameLabel);
                nameHolder.appendChild(name);
                labels.appendChild(nameHolder);
                variantHolder.appendChild(variantLabel);
                variantHolder.appendChild(variant);
                labels.appendChild(variantHolder);
                container.appendChild(labels);
                bar.appendChild(progress);
                container.appendChild(bar);
                mainContainer.appendChild(container);


                // Bind and Store Data
                BindAndStoreData(container, i, data);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }
</script>